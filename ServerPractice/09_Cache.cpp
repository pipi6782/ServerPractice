/*
	서버는 비용이 어마어마하게 들어가는 장비이기 때문에 프로그래머가 최상의 효율을 뽑아내는 것이 중요하다.
	그 방법중 하나가 캐시(Cache)를 이용하는 것인데 램까지 가서 데이터를 가져오는 시간을 줄여주기 때문에 효율적이다.
*/

#include <iostream>

int buffer[10000][10000] = { 0 };

int main()
{
	int sum = 0;
	for (int i = 0; i < 10000; i++)
	{
		for (int j = 0; j < 10000; j++)
		{
			sum += buffer[i][j];
		}
	}

	for (int i = 0; i < 10000; i++)
	{
		for (int j = 0; j < 10000; j++)
		{
			sum += buffer[i][j];
		}
	}

	/*
		위 코드에는 시간을 측정하진 않았지만 두 반복문 각각 시간을 측정하면 위 반복문이 점점 빠른 시간안에 처리되게 된다.
		C++은 행 우선으로 캐시에 저장되기 때문에 행 단위로 반복문을 처리하는 위 반복문이 좀 더 빠른 결과가 나올 수 있는 것이다.
		buffer[0][0]을 가져오면 캐시에 buffer[0]에 해당하는 데이터를 전부 가져오게 되고
		그 다음 [0][1]을 처리하려 할 때 먼저 캐시에 데이터가 있는지 검사하게 된다.
		이 때, 캐시에 [0][1]이 있기 때문에 캐시에 있는 데이터를 바로 가져오게 되는데 이것을 Cache Hit 라고 한다.
		만약[0][9999]를 처리하고 [1][0]을 처리하려 하면 캐시에 없기 때문에 램에 가서 데이터를 가져오게 된다. 이것을 Cache Miss 라고 한다.
	*/
}